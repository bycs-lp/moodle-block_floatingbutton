{"version":3,"file":"iconpicker.min.js","sources":["../src/iconpicker.js"],"sourcesContent":["import {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport ICON_SET from 'block_floatingbutton/iconset';\n\nexport const init = (iconpickerclass) => {\n    // Add index to icon set to make producing an unique id easier.\n    ICON_SET.forEach(function(v, i) {\n        v.index = i;\n    });\n\n    // Make inputs of the moodle form invisible and add button for iconpicker.\n    let inputs = Array.from(document.querySelectorAll('.block_floatingbutton-input input'));\n    inputs.forEach(function(input) {\n        input.setAttribute('style', 'visibility: collapse; width: 0; margin: 0; padding: 0; position: absolute;');\n        input.insertAdjacentHTML(\n            'afterend',\n            '<button class=\"' + iconpickerclass + ' btn btn-secondary btn-icon\" type=\"button\" id=\"' + input.name +\n            '_button\" data-iconpicker-input=\"' + input.name + '\"><i class=\"' + input.value + '\"></i></button>'\n        );\n    });\n\n    // Attach click listener to each iconpicker buton. The callback function also sets data-iconpicker\n    // and data-iconpicker-input attributes.\n    let iconpickers = Array.from(document.querySelectorAll(\".\" + iconpickerclass));\n    iconpickers.forEach(function(picker) {\n        picker.addEventListener('click', function(event) {\n            let target = event.target.closest('.' + iconpickerclass);\n            buildModal(target.id, target.getAttribute('data-iconpicker-input'));\n        });\n    });\n};\n\n/**\n * Build modal for iconpicker.\n * @param {*} target\n * @param {*} input\n */\nfunction buildModal(target, input) {\n    // Build iconpicker modal with moodle modal factory\n    Templates.renderForPromise('block_floatingbutton/iconpicker', {target: target, input: input, icons: ICON_SET})\n        .then(({html}) => {\n            require(['jquery', 'core/modal_factory'], function($, ModalFactory) {\n                var trigger = $('#create-modal');\n                ModalFactory.create({\n                    title: 'Icon picker',\n                    body: html,\n                    footer: '',\n                }, trigger)\n                .done(function(modal) {\n                    modal.getRoot().on('modal:shown', function(event) {\n                        let iconpicker = event.target.querySelector('.block_floatingbutton-iconpicker');\n                        // Listeners for the icons and the search input have to be registered when modal is shown for the first\n                        // time because modal doesn't exist in the DOM before.\n                        let search = iconpicker.querySelector('.block_floatingbutton-iconpicker-search-input');\n                        search.addEventListener('input', searchicon);\n                        let icons = Array.from(iconpicker.querySelectorAll('.block_floatingbutton-iconpicker-icon'));\n                        icons.forEach(function(icon) {\n                            icon.addEventListener('click', (e) => {\n                                iconclick(e);\n                                modal.hide();\n                            });\n                        });\n                    });\n                    modal.show();\n                    highlightselected();\n                });\n            });\n            return true;\n        }).catch(ex => displayException(ex));\n}\n\n/**\n * Show only icons that match the search value.\n * @param {*} event\n */\nfunction searchicon(event) {\n    let modal = event.target.closest('.block_floatingbutton-iconpicker');\n    let search = event.target.closest('.block_floatingbutton-iconpicker-search-input');\n    let icons = Array.from(modal.querySelectorAll('.block_floatingbutton-iconpicker-icon'));\n    icons.forEach(function(icon) {\n        if (\n            icon.getAttribute('data-search').includes(search.value)\n        ) {\n            icon.setAttribute('style', '');\n        } else {\n            icon.setAttribute('style', 'display: none;');\n        }\n    });\n}\n\n/**\n * Adds class \"highlight\" to currently selected icon.\n */\nfunction highlightselected() {\n    let icons = Array.from(document.getElementsByClassName('block_floatingbutton-iconpicker-icon'));\n    let input = document.querySelector('.block_floatingbutton-iconpicker').getAttribute('data-iconpicker-input');\n    if (!(input === null)) {\n        let iconclass = document.querySelector(`[name=\"${input}\"]`).getAttribute('value');\n        icons.forEach(function(icondiv) {\n            icondiv.classList.remove('highlight');\n            if (icondiv.querySelector('i').classList == iconclass) {\n                icondiv.classList.add('highlight');\n            }\n        });\n    }\n}\n\n/**\n * Function called when user clicks on an icon\n * @param {*} event\n */\nfunction iconclick(event) {\n    let modal = event.target.closest('.block_floatingbutton-iconpicker');\n    let target = modal.getAttribute('data-iconpicker');\n    let input = modal.getAttribute('data-iconpicker-input');\n    if (target) {\n        let icondiv = event.target.closest('.block_floatingbutton-iconpicker-icon');\n        let iconclass = document.querySelector('#' + icondiv.id + ' i').classList;\n        document.getElementById(target).innerHTML = '<i class=\"' + iconclass + '\"></i>';\n        document.querySelector(`[name=\"${input}\"]`).setAttribute('value', iconclass);\n    }\n    highlightselected(modal);\n}\n"],"names":["searchicon","event","modal","target","closest","search","Array","from","querySelectorAll","forEach","icon","getAttribute","includes","value","setAttribute","highlightselected","icons","document","getElementsByClassName","input","querySelector","iconclass","icondiv","classList","remove","add","iconpickerclass","v","i","index","insertAdjacentHTML","name","picker","addEventListener","renderForPromise","ICON_SET","then","_ref","html","require","$","ModalFactory","trigger","create","title","body","footer","done","getRoot","on","iconpicker","e","id","getElementById","innerHTML","iconclick","hide","show","catch","ex","buildModal"],"mappings":"+aA2ESA,WAAWC,WACZC,MAAQD,MAAME,OAAOC,QAAQ,oCAC7BC,OAASJ,MAAME,OAAOC,QAAQ,iDACtBE,MAAMC,KAAKL,MAAMM,iBAAiB,0CACxCC,SAAQ,SAASC,MAEfA,KAAKC,aAAa,eAAeC,SAASP,OAAOQ,OAEjDH,KAAKI,aAAa,QAAS,IAE3BJ,KAAKI,aAAa,QAAS,8BAQ9BC,wBACDC,MAAQV,MAAMC,KAAKU,SAASC,uBAAuB,yCACnDC,MAAQF,SAASG,cAAc,oCAAoCT,aAAa,4BACpE,OAAVQ,MAAiB,KACfE,UAAYJ,SAASG,+BAAwBD,aAAWR,aAAa,SACzEK,MAAMP,SAAQ,SAASa,SACnBA,QAAQC,UAAUC,OAAO,aACrBF,QAAQF,cAAc,KAAKG,WAAaF,WACxCC,QAAQC,UAAUE,IAAI,+BAjGjBC,mCAERjB,SAAQ,SAASkB,EAAGC,GACzBD,EAAEE,MAAQD,KAIDtB,MAAMC,KAAKU,SAAST,iBAAiB,sCAC3CC,SAAQ,SAASU,OACpBA,MAAML,aAAa,QAAS,8EAC5BK,MAAMW,mBACF,WACA,kBAAoBJ,gBAAkB,kDAAoDP,MAAMY,KAChG,mCAAqCZ,MAAMY,KAAO,eAAiBZ,MAAMN,MAAQ,sBAMvEP,MAAMC,KAAKU,SAAST,iBAAiB,IAAMkB,kBACjDjB,SAAQ,SAASuB,QACzBA,OAAOC,iBAAiB,SAAS,SAAShC,WAClCE,OAASF,MAAME,OAAOC,QAAQ,IAAMsB,2BAWhCvB,OAAQgB,0BAEde,iBAAiB,kCAAmC,CAAC/B,OAAQA,OAAQgB,MAAOA,MAAOH,MAAOmB,mBAC/FC,MAAKC,WAACC,KAACA,kBACJC,QAAQ,CAAC,SAAU,uBAAuB,SAASC,EAAGC,kBAC9CC,QAAUF,EAAE,iBAChBC,aAAaE,OAAO,CAChBC,MAAO,cACPC,KAAMP,KACNQ,OAAQ,IACTJ,SACFK,MAAK,SAAS7C,OACXA,MAAM8C,UAAUC,GAAG,eAAe,SAAShD,WACnCiD,WAAajD,MAAME,OAAOiB,cAAc,oCAG/B8B,WAAW9B,cAAc,iDAC/Ba,iBAAiB,QAASjC,YACrBM,MAAMC,KAAK2C,WAAW1C,iBAAiB,0CAC7CC,SAAQ,SAASC,MACnBA,KAAKuB,iBAAiB,SAAUkB,cAsDzClD,WACXC,MAAQD,MAAME,OAAOC,QAAQ,oCAC7BD,OAASD,MAAMS,aAAa,mBAC5BQ,MAAQjB,MAAMS,aAAa,4BAC3BR,OAAQ,KACJmB,QAAUrB,MAAME,OAAOC,QAAQ,yCAC/BiB,UAAYJ,SAASG,cAAc,IAAME,QAAQ8B,GAAK,MAAM7B,UAChEN,SAASoC,eAAelD,QAAQmD,UAAY,aAAejC,UAAY,SACvEJ,SAASG,+BAAwBD,aAAWL,aAAa,QAASO,WAEtEN,oBA/D4BwC,CAAUJ,GACVjD,MAAMsD,gBAIlBtD,MAAMuD,OACN1C,2BAGD,KACR2C,OAAMC,KAAM,2BAAiBA,MAzC5BC,CAAWzD,OAAOiD,GAAIjD,OAAOQ,aAAa"}