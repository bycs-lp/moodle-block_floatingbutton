{"version":3,"file":"iconpicker.min.js","sources":["../src/iconpicker.js"],"sourcesContent":["import {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport ICON_SET from 'block_floatingbutton/iconset';\n\nvar iconpickermodal;\n\nexport const init = (iconpickerclass) => {\n    // Add index to icon set to make producing an unique id easier.\n    ICON_SET.forEach(function(v, i) {\n        v.index = i;\n    });\n\n    var clickSet = false;\n\n    // Make inputs of the moodle form invisible and add button for iconpicker.\n    let inputs = Array.from(document.querySelectorAll('.block_floatingbutton-input input'));\n    inputs.forEach(function(input) {\n        input.setAttribute('style', 'visibility: collapse; width: 0; margin: 0; padding: 0; position: absolute;');\n        input.insertAdjacentHTML(\n            'afterend',\n            '<button class=\"' + iconpickerclass + ' btn btn-secondary btn-icon\" type=\"button\" id=\"' + input.id +\n            '_button\" data-icon-input=\"' + input.id + '\"><i class=\"' + input.value + '\"></i></button>'\n        );\n    });\n\n    // Attach click listener to each iconpicker buton. The callback function also sets data-iconpicker\n    // and data-icon-input attributes.\n    let iconpickers = Array.from(document.querySelectorAll(\".\" + iconpickerclass));\n    iconpickers.forEach(function(picker) {\n        picker.addEventListener('click', function() {\n            iconpickermodal.show();\n            document.querySelector('.block_floatingbutton-iconpicker').setAttribute('data-iconpicker', picker.id);\n            document.querySelector('.block_floatingbutton-iconpicker').setAttribute(\n                'data-icon-input',\n                picker.getAttribute('data-icon-input')\n            );\n            highlightselected();\n        });\n    });\n\n    // Build iconpicker modal with moodle modal factory\n    Templates.renderForPromise('block_floatingbutton/iconpicker', {icons: ICON_SET})\n        .then(({html}) => {\n            require(['jquery', 'core/modal_factory'], function($, ModalFactory) {\n                var trigger = $('#create-modal');\n                ModalFactory.create({\n                    title: 'Icon picker',\n                    body: html,\n                    footer: '',\n                }, trigger)\n                    .done(function(modal) {\n                        iconpickermodal = modal;\n                        modal.getRoot().on('modal:shown', function() {\n                            // Listeners for the icons and the search input have to be registered when modal is shown for the first\n                            // time because modal doesn't exist in the DOM before.\n                            if (!clickSet) {\n                                let search = document.querySelector('#block_floatingbutton-iconpicker-search');\n                                search.addEventListener('input', searchicon);\n                                let icons = Array.from(document.querySelectorAll('.block_floatingbutton-iconpicker-icon'));\n                                icons.forEach(function(icon) {\n                                    icon.addEventListener('click', iconclick);\n                                });\n                                clickSet = true;\n                            }\n                        });\n                    });\n            });\n            return true;\n        }).catch(ex => displayException(ex));\n};\n\n/**\n * Show only icons that match the search value\n */\nfunction searchicon() {\n    let search = document.querySelector('#block_floatingbutton-iconpicker-search');\n    let icons = Array.from(document.querySelectorAll('.block_floatingbutton-iconpicker-icon'));\n    icons.forEach(function(icon) {\n        if (\n            icon.getAttribute('data-search').includes(search.value)\n        ) {\n            icon.setAttribute('style', '');\n        } else {\n            icon.setAttribute('style', 'display: none;');\n        }\n    });\n}\n\n/**\n * Adds class \"highlight\" to currently selected icon.\n */\nfunction highlightselected() {\n    let icons = Array.from(document.getElementsByClassName('block_floatingbutton-iconpicker-icon'));\n    let input = document.querySelector('.block_floatingbutton-iconpicker').getAttribute('data-icon-input');\n    if (!(input === null)) {\n        let iconclass = document.getElementById(input).getAttribute('value');\n        icons.forEach(function(icondiv) {\n            icondiv.classList.remove('highlight');\n            if (icondiv.querySelector('i').classList == iconclass) {\n                icondiv.classList.add('highlight');\n            }\n        });\n    }\n}\n\n/**\n * Function called when user clicks on an icon\n * @param {*} event\n */\nfunction iconclick(event) {\n    let id = document.querySelector('.block_floatingbutton-iconpicker').getAttribute('data-iconpicker');\n    let input = document.querySelector('.block_floatingbutton-iconpicker').getAttribute('data-icon-input');\n    if (id) {\n        let icondiv = event.target;\n        if (event.target.nodeName != 'DIV') {\n            icondiv = event.target.parentNode;\n        }\n        let iconclass = document.querySelector('#' + icondiv.id + ' i').classList;\n        document.getElementById(id).innerHTML = '<i class=\"' + iconclass + '\"></i>';\n        document.getElementById(input).setAttribute('value', iconclass);\n    }\n    highlightselected();\n    iconpickermodal.hide();\n}\n"],"names":["iconpickermodal","searchicon","search","document","querySelector","Array","from","querySelectorAll","forEach","icon","getAttribute","includes","value","setAttribute","highlightselected","icons","getElementsByClassName","input","iconclass","getElementById","icondiv","classList","remove","add","iconclick","event","id","target","nodeName","parentNode","innerHTML","hide","iconpickerclass","v","i","index","clickSet","insertAdjacentHTML","picker","addEventListener","show","renderForPromise","ICON_SET","then","_ref","html","require","$","ModalFactory","trigger","create","title","body","footer","done","modal","getRoot","on","catch","ex"],"mappings":"qQAIIA,8LAsEKC,iBACDC,OAASC,SAASC,cAAc,2CACxBC,MAAMC,KAAKH,SAASI,iBAAiB,0CAC3CC,SAAQ,SAASC,MAEfA,KAAKC,aAAa,eAAeC,SAAST,OAAOU,OAEjDH,KAAKI,aAAa,QAAS,IAE3BJ,KAAKI,aAAa,QAAS,8BAQ9BC,wBACDC,MAAQV,MAAMC,KAAKH,SAASa,uBAAuB,yCACnDC,MAAQd,SAASC,cAAc,oCAAoCM,aAAa,sBACpE,OAAVO,MAAiB,KACfC,UAAYf,SAASgB,eAAeF,OAAOP,aAAa,SAC5DK,MAAMP,SAAQ,SAASY,SACnBA,QAAQC,UAAUC,OAAO,aACrBF,QAAQhB,cAAc,KAAKiB,WAAaH,WACxCE,QAAQC,UAAUE,IAAI,0BAU7BC,UAAUC,WACXC,GAAKvB,SAASC,cAAc,oCAAoCM,aAAa,mBAC7EO,MAAQd,SAASC,cAAc,oCAAoCM,aAAa,sBAChFgB,GAAI,KACAN,QAAUK,MAAME,OACS,OAAzBF,MAAME,OAAOC,WACbR,QAAUK,MAAME,OAAOE,gBAEvBX,UAAYf,SAASC,cAAc,IAAMgB,QAAQM,GAAK,MAAML,UAChElB,SAASgB,eAAeO,IAAII,UAAY,aAAeZ,UAAY,SACnEf,SAASgB,eAAeF,OAAOJ,aAAa,QAASK,WAEzDJ,oBACAd,gBAAgB+B,qBApHCC,mCAERxB,SAAQ,SAASyB,EAAGC,GACzBD,EAAEE,MAAQD,SAGVE,UAAW,EAGF/B,MAAMC,KAAKH,SAASI,iBAAiB,sCAC3CC,SAAQ,SAASS,OACpBA,MAAMJ,aAAa,QAAS,8EAC5BI,MAAMoB,mBACF,WACA,kBAAoBL,gBAAkB,kDAAoDf,MAAMS,GAChG,6BAA+BT,MAAMS,GAAK,eAAiBT,MAAML,MAAQ,sBAM/DP,MAAMC,KAAKH,SAASI,iBAAiB,IAAMyB,kBACjDxB,SAAQ,SAAS8B,QACzBA,OAAOC,iBAAiB,SAAS,WAC7BvC,gBAAgBwC,OAChBrC,SAASC,cAAc,oCAAoCS,aAAa,kBAAmByB,OAAOZ,IAClGvB,SAASC,cAAc,oCAAoCS,aACvD,kBACAyB,OAAO5B,aAAa,oBAExBI,6CAKE2B,iBAAiB,kCAAmC,CAAC1B,MAAO2B,mBACjEC,MAAKC,WAACC,KAACA,kBACJC,QAAQ,CAAC,SAAU,uBAAuB,SAASC,EAAGC,kBAC9CC,QAAUF,EAAE,iBAChBC,aAAaE,OAAO,CAChBC,MAAO,cACPC,KAAMP,KACNQ,OAAQ,IACTJ,SACEK,MAAK,SAASC,OACXvD,gBAAkBuD,MAClBA,MAAMC,UAAUC,GAAG,eAAe,eAGzBrB,SAAU,CACEjC,SAASC,cAAc,2CAC7BmC,iBAAiB,QAAStC,YACrBI,MAAMC,KAAKH,SAASI,iBAAiB,0CAC3CC,SAAQ,SAASC,MACnBA,KAAK8B,iBAAiB,QAASf,cAEnCY,UAAW,aAKxB,KACRsB,OAAMC,KAAM,2BAAiBA"}